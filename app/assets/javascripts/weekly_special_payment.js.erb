$(document).ready(function(){
  /*
    Special Payment JS . 
    the namespace for fields/forms = sp_ << for user entry
    for the js display sp_display_ namespace
    for the fields in the form to be sent to the server : smf_
   */
   
   /*
    Single Week + Extra Savings 
   */
   
   
   $("#exe_single_extra_savings_payment").live("click", function(){
     var $form = $("#form_single_extra_savings_payment");
     var value = newParseInt( $("#ses_cash_amount").attr("value") );
     var basic_weekly_payment_amount = newParseInt( $("#basic_weekly_payment_amount").attr("value") );
     
     
     
     if( value < basic_weekly_payment_amount ){
        alert("The payment amount can't be less than " + addCommas(basic_weekly_payment_amount));
        return false ;
      }else{
        if(confirm("Are you sure for savings_only payment with amount " +addCommas(value)+  " ?")){
          $form.showLoading();
          $.ajax({
             url: $form.attr("action"),
             type: "POST",
             data: $form.serialize(),
             dataType: 'script',
             success: function(response){
               $form.clearForm();
               $form.hideLoading();
             }
           });
           return false ;
        }else{
          return false;
        }
      }
      
      
     
   });
   
   
   /*
     Only savings payment  
     */
     $("#exe_only_savings_payment").live("click", function(){

       var $form = $("#form_only_savings_payment");
       var value = newParseInt( $("#os_cash_amount").attr("value") );

       if( value <= 0 ){
         alert("Wrong value, equal or less than 0");
         return false ;
       }else{
         if(confirm("Are you sure for savings_only payment with amount " +addCommas(value)+  " ?")){
           $form.showLoading();
           $.ajax({
              url: $form.attr("action"),
              type: "POST",
              data: $form.serialize(),
              dataType: 'script',
              success: function(response){
                $form.clearForm();
                $form.hideLoading();
              }
            });
            return false ;
         }else{
           return false;
         }
       }
     });

    /*
     No payment 
    */
    $("#no_payment_exe").live('click',function(){
      var $form =$("#no_payment_form");
      if(confirm("Are you sure for authorizing no payment?")){
         $form.showLoading();

         $.ajax({
           url: $form.attr("action"),
           type: "POST",
           data: $form.serialize(),
           dataType: 'script',
           success: function(response){
             // $form.clearForm();
             $form.hideLoading();
           }
         });
         return false ;
       }else{
         return false;
       }
    });
   
   
   
   
   
   
   
   /*
   The structured_multiple calculator
   */
   $("#sp_simulate_structured_payment").live('click', function(){
     var cash = newParseInt( $("#sp_calc_cash").attr("value") );
     var number_of_weeks = newParseInt( $("#sp_calc_weeks").attr("value") );
     var number_of_backlogs = newParseInt( $("#sp_calc_backlog_weeks").attr("value") );
     var combined_number_of_weeks_and_backlogs_payment = number_of_weeks + number_of_backlogs ; 
     
     
     var stated_savings_withdrawal = newParseInt( $("#sp_calc_savings_withdraw").attr("value") );
     var basic_weekly_payment_amount = newParseInt( $("#basic_weekly_payment_amount").attr("value") );
     var total_savings = newParseInt( $("#sp_total_savings_amount").attr("value") );
     var savings_withdrawal; 
     var total_payable_weeks = newParseInt( $("#total_payable_weeks").attr("value")    );
     var total_payable_backlogs = newParseInt( $("#total_payable_backlogs").attr("value")    ); 
     var combined_number_of_weeks = total_payable_weeks + total_payable_backlogs;
     
     if( total_savings - stated_savings_withdrawal   >= 0 ){
       savings_withdrawal = stated_savings_withdrawal;
     }else{
       savings_withdrawal = total_savings;
     }
     
     var total_payment = combined_number_of_weeks_and_backlogs_payment*basic_weekly_payment_amount ; 
     var balance = cash + savings_withdrawal - total_payment ; 
     
     
     // show the data 
     if( number_of_weeks >= 0   && number_of_weeks <= total_payable_weeks  && 
          number_of_backlogs >= 0 &&  number_of_backlogs <= total_payable_backlogs   && 
          !( number_of_weeks == 0 && number_of_backlogs == 0  )   ){
       $("#sp_display_weeks").text( number_of_weeks );
       $("#sp_display_backlogs").text(number_of_backlogs);
        $("#sp_display_total_payment").text( addCommas(total_payment) );
        $("#sp_display_cash").text( addCommas(cash));
        $("#sp_display_savings_withdrawal").text( addCommas(savings_withdrawal));
        $("#sp_display_balance").text( addCommas(balance));



        $("#smf_savings_withdrawal").attr( 'value', savings_withdrawal );
        $("#smf_balance").attr( 'value', balance );
        $("#smf_cash").attr( 'value', cash );
        $("#smf_weeks").attr( 'value', number_of_weeks );
        $("#smf_backlogs").attr( 'value', number_of_backlogs );
        
        if( balance < 0 ){
           alert("Negative balance: " + addCommas(balance) );
         }
     }else{
       if(  number_of_weeks == 0  && number_of_backlogs == 0 ){
         alert("number of weeks and number of backlogs can't be both 0" );
       }
       
       if( number_of_weeks < 0  || number_of_weeks > total_payable_weeks ){
          alert("Duration should be between "  + 0 +   " and "  + total_payable_weeks);
        }

        if( number_of_backlogs < 0 || number_of_backlogs > total_payable_backlogs     ){
           alert("Backlogs should be between " + 0 +  " and " + total_payable_backlogs);
         }
       
     }
     
     
     
     
     
     return false; 
   });

    /*
    Still the special payment. 
    */
   $("#pay_and_save_balance").live('click', function(){
        
     var $form = $("#structured_multiple_form");
        
     var balance = $('#smf_balance').attr('value');
     
     var balance_value = newParseInt( $("#smf_balance").attr("value") );
     var savings_withdrawal_value = newParseInt( $("#smf_savings_withdrawal").attr("value") );
     var cash_value = newParseInt( $("#smf_cash").attr("value") );
     var backlogs  = newParseInt( $("#smf_backlogs").attr('value') );
     var duration = newParseInt( $("#sp_calc_weeks").attr("value") );
     
     if(   duration == 0 &&  backlogs == 0  ){
       alert("Can't execute payment. Both of duration and backlogs is 0.");
       return false; 
     }
     
     if( balance < 0  ) {
       alert("Negative balance: " + addCommas(balance) +  ". Can't perform transaction");
       return false; 
     }else if(   ( balance == '') || 
                 (  cash_value ==  0  && savings_withdrawal_value == 0  )  || 
                 (  duration == 0  &&  backlogs == 0 )){
       alert("No value. Please simulate the Calculator.");
       return false;
       
     }else if( (balance_value ==  0 ) && (cash_value == 0 ) 
                    && (savings_withdrawal_value ==0)){
       alert("Invalid case");
       return false;
     }else{
       
       if(confirm("Are you sure?")){
         $form.showLoading();

         $.ajax({
           url: $form.attr("action"),
           type: "POST",
           data: $form.serialize(),
           dataType: 'script',
           success: function(response){
             // $form.clearForm();
             $form.hideLoading();
           }
         });
         return false ;
       }else{
         return false;
       }
     }
   });
   
   
   
   /*
    ONLY EXTRA SAVINGS 
   */
   

   $("#exe_only_extra_savings_payment").live("click", function(){

     var $form = $("#form_only_extra_savings_payment");
     var value = newParseInt( $("#oes_cash_amount").attr("value") );

     if( value <= 0 ){
       alert("Wrong value, equal or less than 0");
       return false ;
     }else{
       if(confirm("Are you sure for savings_only payment with amount " +addCommas(value)+  " ?")){
         $form.showLoading();
         $.ajax({
           url: $form.attr("action"),
           type: "POST",
           data: $form.serialize(),
           dataType: 'script',
           success: function(response){
             $form.clearForm();
             $form.hideLoading();
           }
         });
         return false ;
       }else{
         return false;
       }
     }
   });
   
   

   
});