$(document).ready(function() {
  $('.menu-dropdown').dropdown();

  // prevent double submit
  jQuery('.prevent_double_submit').preventDoubleSubmit();
  
  $('#create_cash_savings_withdrawal').live('click', function(){
    var value = newParseInt( $("#savings_withdrawal_amount").attr("value") );
    
    var extra_savings = newParseInt( $("#total_extra_savings").attr("value") );
    
    if( value > extra_savings){
      alert("the savings withdrawal can't exceed "  + addCommas(extra_savings));
      return false; 
    }else if(value == 0 ){
      alert("savings withdrawal must be greater than 0 ");
      return false; 
    }
  });
  
  /*
    To simulate the group loan product
      In the form:
        #weekly_principal
        #weekly_interest
        #duration
    
      In the calculator 
        #total_principal
        #percentage_interest
        #calculator_duration
  */

  $("#simulate_group_loan_product").click(function(){/*
      console.log("I am fucking clicked");
      console.log("Total principal is " + parseFloat( $("#total_principal input").val()  ) );
      console.log("Total percentage is " + parseFloat( $("#percentage_interest input").val()  ) );
      console.log("Total duration is " + parseInt(  $("#calculator_duration input").val()  ));*/
    
    var total_principal = parseFloat( $("#total_principal input").val()  );
    var percentage_interest = parseFloat( $("#percentage_interest input").val()  );
    var loan_duration =  parseInt(  $("#calculator_duration input").val() );
    
    var weekly_principal = total_principal/loan_duration; 
    var weekly_interest = weekly_principal * percentage_interest/100;
    /*
        console.log("the calculated weekly principal is " + weekly_principal);
        console.log("The calculated weekly interest is "+ weekly_interest);*/
    $("#weekly_principal").val(weekly_principal);
    $("#weekly_interest").val( weekly_interest );
    $("#duration").val( loan_duration );
  });
  
  // assignment related methods 
   $(".checkbox_tracker").live( 'change', function(){
     var $checkbox = $(this);
     var after_clicked_value;

     /*
       Extracting the value of the checkbox, based on the user action
     */
     if(   $checkbox.is(":checked")  ) {
       $checkbox.attr('value', <%= TRUE_CHECK %>);
       after_clicked_value = <%= TRUE_CHECK %>;
     }else{
       $checkbox.attr( 'value', <%= FALSE_CHECK %> );
        after_clicked_value = <%= FALSE_CHECK %>;
     }


     var checkbox_id = $checkbox.attr("id");
     var provider_id = checkbox_id.split("-")[0].split("_")[1];
     var consumer_id = checkbox_id.split("-")[1].split("_")[1];

     var $form = $("#checkbox_form_wrapper form");

     var provider_field = $("#membership_provider");
     provider_field.attr('value', provider_id);
     var consumer_field = $("#membership_consumer");
     consumer_field.attr('value', consumer_id);

     var decision_field = $("#membership_decision");
     decision_field.attr("value", after_clicked_value )

     if($checkbox.hasClass("single-submit")){
       $form.trigger('submit');
     }else {


       $checkbox.showLoading();

       $.ajax({
         url: $form.attr("action"),
         type: "POST",
         data: $form.serialize(),
         dataType: 'script',
         success: function(response){
           $form.clearForm();
           $checkbox.hideLoading();
         }
       });
     }
   });
   
  
   
   
   
   /*
   See details of group_loan_product
   */
   $("a.group_loan_product_details").live('click', function(){
     var modal_id = $(this).attr("id").split("-")[1];
     
     var $modal_wrapper = $("#myModal-" + modal_id );
     $modal_wrapper.modal('show');
     var $modal_closer = $(".modal-footer .modal-closer", $modal_wrapper);
     $modal_closer.click(function(){
       $modal_wrapper.modal('hide');
       return false;
     });
     
     return false; 
     
     /*
     For modal size, use https://github.com/twitter/bootstrap/issues/675
     */
   });
   
   
   /*
    To assign group loan, change group loan 
   */
   $(".change_group_loan_product").live("click", function(){
     var $this = $(this);
     
     var group_membership_id;
     var member_group_loan_product_id; 
     
     var $assign_loan_modal = $("#myModal-loan_product_selector");
     var $modal_closer = $(".modal-footer .modal-closer", $assign_loan_modal );
     var $summary_page = $(".summary_product_selector", $assign_loan_modal);
     var $back_to_summary_button = $(".back_to_summary_button", $assign_loan_modal);
     
     // Show the summary page
     $summary_page.removeClass("modal-hidden");
     
     // hide all detail pages
     $(".detail_product_page", $assign_loan_modal).each(function(){
       $(this).addClass("modal-hidden");
     });
     // hide the back to summary button
     $back_to_summary_button.hide();
     
     // unbind the select button
     $(".group_loan_product_select", $assign_loan_modal).each(function(){
       $(this).unbind();
     });
     
     // unbind the details button
     $(".group_loan_product_details_selector", $assign_loan_modal).each(function(){
       $(this).unbind();
     });
     
     
     
     if( $this.hasClass("no_loan_assigned") ){
       group_membership_id = $(this).attr("id").split("-")[1];
       member_group_loan_product_id = 0 ;
     }else{
       group_membership_id = $(this).attr("id").split("_")[0].split("-")[1];
       member_group_loan_product_id = $(this).attr("id").split("_")[1].split("-")[1];
     }
    
     
     // bind the detail button 
     $(".group_loan_product_details_selector", $assign_loan_modal).click(function(){
       var product_detail_id = $(this).attr("id").split("-")[1];
       $summary_page.addClass("modal-hidden");
       var $detail_product_page = $("#detail_product_page-" + product_detail_id);
       $detail_product_page.removeClass("modal-hidden");
       
       $back_to_summary_button.show();
       // bind the back button
       $back_to_summary_button.click(function(){
         $(this).hide();
         $detail_product_page.addClass("modal-hidden");
         $summary_page.removeClass("modal-hidden");
       });
     });
     
     
     // bind the select button 
     $(".group_loan_product_select", $assign_loan_modal).each(function(){
       
       var group_loan_product_id = $(this).attr("id").split("-")[1];
       if( group_loan_product_id == member_group_loan_product_id){
         $(this).addClass("btn-success"); 
         $(this).text("<%= I18n.t 'status.selected' %>");
       }else{
         $(this).removeClass("btn-success");
         $(this).text("<%= I18n.t 'trigger.select' %>");
         $(this).click(function(){
            $assign_loan_modal.showLoading();
            
            var $form = $("#checkbox_form_wrapper form" );
            var $membership_provider = $("#membership_provider");
            $membership_provider.attr('value', group_loan_product_id );
            var $membership_consumer = $("#membership_consumer");
            $membership_consumer.attr('value', group_membership_id );
            
            // $assign_loan_modal.hideLoading();
            
            $.ajax({
              url: $form.attr("action"),
              type: "POST",
              data: $form.serialize(),
              dataType: 'script',
              success: function(response){
                $form.clearForm();
                $assign_loan_modal.hideLoading();
              }
            });
          });
       }
     });
     
     $modal_closer.click(function(){
       $assign_loan_modal.modal('hide');
       return false;
     });
     $assign_loan_modal.modal("show");
     
     return false;
   });
   
   
   /*
     Propose Button
   */
   $(".action").live('click', function(){
     var $this  = $(this);
     var entity_id = $this.attr("id").split("-")[1];
     var action_role ;
     var action_value = -1 ; // if we are in the action role proposer, we won't even look at the action 
     
     if( $this.hasClass("propose")){
       action_role = <%= PROPOSER_ROLE %>;
       if($this.hasClass("true_check")){
          action_value = <%= TRUE_CHECK %>;
       }else if($this.hasClass("special_notice")){
					action_value = <%= SPECIAL_NOTICE_CHECK %>; 
			 }else{
          action_value = <%= FALSE_CHECK %>;
       }
     }else if( $this.hasClass("approve") ){
       action_role = <%= APPROVER_ROLE %>;
       //  approver can approve or reject.. if it is FALSE_CHECK -> reject action. vice versa
       if($this.hasClass("true_check")){
         action_value = <%= TRUE_CHECK %>;
       }else{
         action_value = <%= FALSE_CHECK %>;
       }
     }
     
     var $form = $("#approve_propose_form_wrapper form");
     var $entity_id_field = $("#entity_id") ;
     var $action_role_field = $("#action_role") ;
     var $action_field = $("#action_value");
     
     $entity_id_field.attr("value", entity_id);
     $action_role_field.attr("value",action_role );
     
     $action_field.attr("value", action_value);
     // console.log("The action value is " + action_value);
     if( confirm("Are you sure?") ){
       $this.showLoading(); 

       $.ajax({
         url: $form.attr("action"),
         type: "POST",
         data: $form.serialize(),
         dataType: 'script',
         success: function(response){
           $form.clearForm();
           $this.hideLoading();
         }
       });
     }
     
     return false;
   });
   
   
   
   
   
   /*
   Backlog Payment
   */
   
   
   $("#bp_simulate_structured_payment").live('click', function(){
      var cash = newParseInt( $("#bp_calc_cash").attr("value") );
      var number_of_weeks = newParseInt( $("#bp_calc_weeks").attr("value") );
      var stated_savings_withdrawal = newParseInt( $("#bp_calc_savings_withdraw").attr("value") );
      var basic_weekly_payment_amount = newParseInt( $("#basic_weekly_payment_amount").attr("value") );
      var total_savings = newParseInt( $("#bp_total_savings_amount").attr("value") );
      var savings_withdrawal; 
      var total_payable_weeks = newParseInt( $("#total_backlog_weeks_payable").attr("value")    )

      if( total_savings - stated_savings_withdrawal   >= 0 ){
        savings_withdrawal = stated_savings_withdrawal;
      }else{
        savings_withdrawal = total_savings;
      }

      var total_payment = number_of_weeks*basic_weekly_payment_amount; 
      var balance = cash + savings_withdrawal - total_payment ; 


      // show the data 
      if( number_of_weeks <= total_payable_weeks ){
        $("#bp_display_weeks").text( number_of_weeks );
         $("#bp_display_total_payment").text( addCommas(total_payment) );
         $("#bp_display_cash").text( addCommas(cash));
         $("#bp_display_savings_withdrawal").text( addCommas(savings_withdrawal));
         $("#bp_display_balance").text( addCommas(balance));



         $("#bmf_savings_withdrawal").attr( 'value', savings_withdrawal );
         $("#bmf_balance").attr( 'value', balance );
         $("#bmf_cash").attr( 'value', cash );
         $("#bmf_weeks").attr( 'value', number_of_weeks );
         if( balance < 0 ){
           alert("Negative balance: " + addCommas(balance) );
         }
      }else{
        alert("Max number of backlog weeks payable: " + total_payable_weeks  );
      }



      

      return false; 
    });
   
   /*
   Execute backlog payment 
   */
   
    $("#pay_backlog_and_save_balance").live('click', function(){

       var $form = $("#backlog_structured_multiple_form");

       var balance = $('#bmf_balance').attr('value');

       var balance_value = newParseInt( $("#bmf_balance").attr("value") );
       var savings_withdrawal_value = newParseInt( $("#bmf_savings_withdrawal").attr("value") );
       var cash_value = newParseInt( $("#bmf_cash").attr("value") );
       
       var duration = newParseInt( $("#bp_calc_weeks").attr("value") );
       
       // console.log("Balance value : "  + balance_value );
       //       console.log("Savings withdrawal value : "  + savings_withdrawal_value );
       //       console.log("Cash value : "  + cash_value );
      
       if(   duration == 0   ){
          alert("Can't execute payment. Duration is 0.");
        }
   
       
       if( balance < 0  ) {
         alert("Negative balance: " + addCommas(balance) +  ". Can't perform transaction");
         return false; 
       }else if( ( balance == '') || 
                (  cash_value ==  0  && savings_withdrawal_value == 0  )  || 
                ( duration == 0 ) ){
         alert("No value. Please simulate the Calculator.");
         return false;

       }else if( (balance_value ==  0 ) && (cash_value == 0 ) 
                      && (savings_withdrawal_value ==0)){
         alert("Invalid case");
         return false;
       }else{

         if(confirm("Are you sure?")){
           $form.showLoading();

           $.ajax({
             url: $form.attr("action"),
             type: "POST",
             data: $form.serialize(),
             dataType: 'script',
             success: function(response){
               // $form.clearForm();
               $form.hideLoading();
             }
           });
           return false ;
         }else{
           return false;
         }
       }
     });
     
     
});


